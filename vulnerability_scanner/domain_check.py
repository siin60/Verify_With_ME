from datetime import datetime
import cloudmersive_validate_api_client
from cloudmersive_validate_api_client.rest import ApiException as ValidateApiException
from .utils import retry_on_exception, text_file, validate_configuration

@retry_on_exception(retries=3, delay=2)
def Domain_Check(domain):  # Validate a domain name
    api_instance = cloudmersive_validate_api_client.DomainApi(cloudmersive_validate_api_client.ApiClient(validate_configuration))
    try:
        apiResponse_domainCheck = api_instance.domain_check(domain)
        if apiResponse_domainCheck.valid_domain:
            text_file(f'{domain} domain exists.')
            print(f'{domain} domain exists.')
        else:
            text_file(f'{domain} does not appear to be a valid domain.')
            print(f'{domain} does not appear to be a valid domain.')
    except ValidateApiException as e:
        if e.status == 401:
            text_file("Unauthorised request. Please check your API key.")
            print("Unauthorised request. Please check your API key.")
        else:
            text_file(f"Exception when calling DomainApi->domain_check: {e}")
            print("Exception when calling DomainApi->domain_check: %s\n" % e)